summary(fit)
summary(fit)$r.squared
Rsq  <- summary(fit)$r.squared
radon_flux <- list()
eval_radon_haube <- function(profil) {
data <- rd_hauben[rd_hauben$`Profil-Nr.` == profil,]
# Linear Fit
fit  <- lm(`N0 [Bq m-3]` ~ `Zeitpunkt [min]`, plotdata)
Rsq  <- summary(fit)$r.squared
# Steigung der Regression = Anstieg der Konzentration über Zeit
increase <- coefficients(fit)[[2]] # Bq m-3 min-1
# Ermittle Flux
flux <- increase / (chamber_heights[profil] * 1e-2)
return(list(
data = data,
increas = increase,
Rsq = Rsq,
flux = flux
))
}
eval_radon_haube(1)
radon_flux[[1]] <- eval_radon_haube(1)
radon_flux[[2]] <- eval_radon_haube(2)
radon_flux[[3]] <- eval_radon_haube(3)
radon_flux[[1]]$Rsq
radon_flux[[2]]$Rsq
radon_flux[[3]]$Rsq
# Haubenmessungen
rd_hauben <- readxl::read_xlsx("../Data/radon.xlsx", sheet = "rd_hauben")
rd_hauben <- rd_hauben[order(rd_hauben$`Profil-Nr.`, rd_hauben$`Zeitpunkt [min]`),]
knitr::kable(rd_hauben)
rd_hauben <- as.data.frame(rd_hauben)
# Hauben-Höhen
chamber_heights <- c(9.852, 10.26, 16.14) # cm
# !!! FOR NOW ONLY !!!
rd_hauben$`N0 [Bq m-3]` <- -1 * rd_hauben$`N0 [Bq m-3]`
radon_flux <- list()
eval_radon_haube <- function(profil) {
data <- rd_hauben[rd_hauben$`Profil-Nr.` == profil,]
# Linear Fit
fit  <- lm(`N0 [Bq m-3]` ~ `Zeitpunkt [min]`, plotdata)
Rsq  <- summary(fit)$r.squared
# Steigung der Regression = Anstieg der Konzentration über Zeit
increase <- coefficients(fit)[[2]] # Bq m-3 min-1
# Ermittle Flux
flux <- increase / (chamber_heights[profil] * 1e-2)
return(list(
data = data,
increas = increase,
Rsq = Rsq,
flux = flux
))
}
radon_flux[[1]] <- eval_radon_haube(1)
eval_radon_haube <- function(profil) {
data <- rd_hauben[rd_hauben$`Profil-Nr.` == profil,]
# Linear Fit
fit  <- lm(`N0 [Bq m-3]` ~ `Zeitpunkt [min]`, data)
Rsq  <- summary(fit)$r.squared
# Steigung der Regression = Anstieg der Konzentration über Zeit
increase <- coefficients(fit)[[2]] # Bq m-3 min-1
# Ermittle Flux
flux <- increase / (chamber_heights[profil] * 1e-2)
return(list(
data = data,
increas = increase,
Rsq = Rsq,
flux = flux
))
}
radon_flux[[1]] <- eval_radon_haube(1)
radon_flux[[2]] <- eval_radon_haube(2)
radon_flux[[3]] <- eval_radon_haube(3)
radon_flux[[2]]$Rsq
radon_flux[[3]]$Rsq
radon_flux[[1]]$Rsq
profil <- 1
plot_radon_haube <- function(profil) {
plotdata <- radon_flux[[profil]]$data$
plot(
x = plotdata$`Zeitpunkt [min]`,
y = plotdata$`N0 [Bq m-3]`
)
}
plot_radon_haube(1)
plot_radon_haube <- function(profil) {
plotdata <- radon_flux[[profil]]$data$
plot(
x = plotdata$`Zeitpunkt [min]`,
y = plotdata$`N0 [Bq m-3]`
)
}
plot_radon_haube(1)
plot_radon_haube <- function(profil) {
plotdata <- radon_flux[[profil]]$data
plot(
x = plotdata$`Zeitpunkt [min]`,
y = plotdata$`N0 [Bq m-3]`
)
}
plot_radon_haube(1)
plot_radon_haube(2)
plot_radon_haube(3)
plot_radon_haube <- function(profil) {
plotdata <- radon_flux[[profil]]$data
plot(
x = plotdata$`Zeitpunkt [min]`,
y = plotdata$`N0 [Bq m-3]`,
xlab = "Time (min)",
ylab = "N0 (Bq m⁻³)",
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
abline(calibration, lwd = 2)
}
plot_radon_haube(1)
plot_radon_haube <- function(profil) {
plotdata  <- radon_flux[[profil]]$data
r_squared <- radon_flux[[profil]]$Rsq
plot(
x = plotdata$`Zeitpunkt [min]`,
y = plotdata$`N0 [Bq m-3]`,
xlab = "Time (min)",
ylab = "N0 (Bq m⁻³)",
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
abline(calibration, lwd = 2)
}
plot_radon_haube(1)
eval_radon_haube <- function(profil) {
data <- rd_hauben[rd_hauben$`Profil-Nr.` == profil,]
# Linear Fit
fit  <- lm(`N0 [Bq m-3]` ~ `Zeitpunkt [min]`, data)
Rsq  <- summary(fit)$r.squared
# Steigung der Regression = Anstieg der Konzentration über Zeit
increase <- coefficients(fit)[[2]] # Bq m-3 min-1
# Ermittle Flux
flux <- increase / (chamber_heights[profil] * 1e-2)
return(list(
data = data,
increase = increase,
Rsq = Rsq,
fit = fit,
flux = flux
))
}
radon_flux[[1]] <- eval_radon_haube(1)
radon_flux[[2]] <- eval_radon_haube(2)
radon_flux[[3]] <- eval_radon_haube(3)
plot_radon_haube <- function(profil) {
plotdata  <- radon_flux[[profil]]$data
r_squared <- radon_flux[[profil]]$Rsq
fit       <- radon_flux[[profil]]$fit
plot(
x = plotdata$`Zeitpunkt [min]`,
y = plotdata$`N0 [Bq m-3]`,
xlab = "Time (min)",
ylab = "N0 (Bq m⁻³)",
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
abline(fit, lwd = 2)
}
plot_radon_haube(1)
plot_radon_haube(2)
plot_radon_haube(3)
plot_radon_haube(2)
rd_profile <- readxl::read_xlsx("../Data/radon.xlsx", sheet = "rd_profile")
rd_profile <- rd_profile[order(rd_profile$`Profil-Nr.`, rd_profile$`Tiefe [cm]`),]
knitr::kable(rd_profile)
rd_profile <- as.data.frame(rd_profile)
# !!! FOR NOW ONLY !!!
rd_profile$`N0 [Bq m-3]` <- -1 * rd_profile$`N0 [Bq m-3]`
radon_dCdt <- list()
profil <- 1
data <- rd_profile[rd_profile$`Profil-Nr.` == profil,]
# Linear Fit
fit  <- lm(`N0 [Bq m-3]` ~ `Tiefe [cm]`, data)
Rsq  <- summary(fit)$r.squared
Rsq
radon_dCdz <- list()
# Steigung der Regression = Änderung der Konzentration über Tiefe
dCdz <- coefficients(fit)[[2]] # Bq m-3 min-1
radon_dCdz <- list()
eval_radon_profile <- function(profil) {
data <- rd_profile[rd_profile$`Profil-Nr.` == profil,]
# Linear Fit
fit  <- lm(`N0 [Bq m-3]` ~ `Tiefe [cm]`, data)
Rsq  <- summary(fit)$r.squared
# Steigung der Regression = Änderung der Konzentration über Tiefe
dCdz <- coefficients(fit)[[2]] # Bq m-3 min-1
return(list(
data = data,
dCdz = dCdz,
Rsq = Rsq,
fit = fit
))
}
radon_dCdz[[1]] <- eval_radon_profile(1)
radon_dCdz[[2]] <- eval_radon_profile(2)
radon_dCdz[[3]] <- eval_radon_profile(3)
radon_dCdt[[1]]
radon_dCdz[[1]]
plotdata  <- radon_dCdz[[profil]]$data
r_squared <- radon_dCdz[[profil]]$Rsq
fit       <- radon_dCdt[[profil]]$fit
radon_dCdz <- list()
eval_radon_profile <- function(profil) {
data <- rd_profile[rd_profile$`Profil-Nr.` == profil,]
# Linear Fit
fit  <- lm(`N0 [Bq m-3]` ~ `Tiefe [cm]`, data)
Rsq  <- summary(fit)$r.squared
# Steigung der Regression = Änderung der Konzentration über Tiefe
dCdz <- coefficients(fit)[[2]] # Bq m-3 min-1
return(list(
data = data,
dCdz = dCdz,
Rsq = Rsq,
fit = fit
))
}
radon_dCdz[[1]] <- eval_radon_profile(1)
radon_dCdz[[2]] <- eval_radon_profile(2)
radon_dCdz[[3]] <- eval_radon_profile(3)
plotdata  <- radon_dCdz[[profil]]$data
r_squared <- radon_dCdz[[profil]]$Rsq
fit       <- radon_dCdz[[profil]]$fit
plot(
x = plotdata$`Zeitpunkt [min]`,
y = plotdata$`N0 [Bq m-3]`,
xlab = "Time (min)",
ylab = "N0 (Bq m⁻³)",
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
plot(
x = plotdata$`N0 [Bq m-3]`,
y = plotdata$`Tiefe [cm]`,
xlab = "Time (min)",
ylab = "N0 (Bq m⁻³)",
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
abline(fit, lwd = 2)
plot(
x = plotdata$`N0 [Bq m-3]`,
y = plotdata$`Tiefe [cm]`,
xlab = "Time (min)",
ylab = "N0 (Bq m⁻³)",
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
abline(fit, lwd = 2)
predict(fit)
?predict
predict(fit, seq(min(plotdata$`Tiefe [cm]`), max(plotdata$`Tiefe [cm]`)))
predict(fit, newdata = new)
new <- data.frame(x = seq(min(plotdata$`Tiefe [cm]`), max(plotdata$`Tiefe [cm]`)))
predict(fit, newdata = new)
new <- data.frame('Tiefe [cm]' = seq(min(plotdata$`Tiefe [cm]`), max(plotdata$`Tiefe [cm]`)))
predict(fit, newdata = new)
new <- data.frame(`Tiefe [cm]` = seq(min(plotdata$`Tiefe [cm]`), max(plotdata$`Tiefe [cm]`)))
predict(fit, newdata = new)
new <- data.frame("Tiefe [cm]" = seq(min(plotdata$`Tiefe [cm]`), max(plotdata$`Tiefe [cm]`)))
predict(fit, newdata = new)
new
coefficients(fit)
x <- seq(min(plotdata$`Tiefe [cm]`), max(plotdata$`Tiefe [cm]`))
x <- seq(min(plotdata$`Tiefe [cm]`), max(plotdata$`Tiefe [cm]`))
y <- a * x + b
# Calculate values using regression
# y = a*x + b
a <- coefficients(fit)[[2]]
b <- coefficients(fit)[[1]]
x <- seq(min(plotdata$`Tiefe [cm]`), max(plotdata$`Tiefe [cm]`))
y <- a * x + b
plot(
x = plotdata$`N0 [Bq m-3]`,
y = plotdata$`Tiefe [cm]`,
xlab = "N0 (Bq m⁻³)",
ylab = "Tiefe (cm)",
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
points(
x = y,
y = x,
type = "l",
lwd = 2
)
plot_radon_profile <- function(profil) {
plotdata  <- radon_dCdz[[profil]]$data
r_squared <- radon_dCdz[[profil]]$Rsq
fit       <- radon_dCdz[[profil]]$fit
# Calculate values using regression
# y = a*x + b
a <- coefficients(fit)[[2]]
b <- coefficients(fit)[[1]]
x <- seq(min(plotdata$`Tiefe [cm]`), max(plotdata$`Tiefe [cm]`))
y <- a * x + b
plot(
x = plotdata$`N0 [Bq m-3]`,
y = plotdata$`Tiefe [cm]`,
xlab = "N0 (Bq m⁻³)",
ylab = "Tiefe (cm)",
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
points(
x = y,
y = x,
type = "l",
lwd = 2
)
}
plot_radon_profile(1)
plot_radon_profile(2)
plot_radon_profile(3)
plot_radon_profile(1)
plot_radon_profile(2)
plot_radon_profile(3)
plot_radon_profile(1)
plot_radon_profile(2)
plot_radon_profile(3)
D_P_radon[1] <- radon_flux[[1]]$flux / radon_dCdz[[1]]$dCdz
D_P_radon <- c()
D_P_radon[1] <- radon_flux[[1]]$flux / radon_dCdz[[1]]$dCdz
D_P_radon[1]
D_P_radon[2]
data$`Tiefe [cm]` * 1e-2
colnames(data)
radon_dCdz <- list()
eval_radon_profile <- function(profil) {
data <- rd_profile[rd_profile$`Profil-Nr.` == profil,]
# convert cm to m
data$`Tiefe [cm]` <- data$`Tiefe [cm]` * 1e-2
colnames(data)    <- c("Profil-Nr.", "Tiefe [m]", "N0 [Bq m-3]")
# Linear Fit
fit  <- lm(`N0 [Bq m-3]` ~ `Tiefe [m]`, data)
Rsq  <- summary(fit)$r.squared
# Steigung der Regression = Änderung der Konzentration über Tiefe
dCdz <- coefficients(fit)[[2]] # Bq m-3 min-1
return(list(
data = data,
dCdz = dCdz,
Rsq = Rsq,
fit = fit
))
}
radon_dCdz[[1]] <- eval_radon_profile(1)
radon_dCdz[[2]] <- eval_radon_profile(2)
radon_dCdz[[3]] <- eval_radon_profile(3)
plot_radon_profile <- function(profil) {
plotdata  <- radon_dCdz[[profil]]$data
r_squared <- radon_dCdz[[profil]]$Rsq
fit       <- radon_dCdz[[profil]]$fit
# Calculate values using regression
# y = a*x + b
a <- coefficients(fit)[[2]]
b <- coefficients(fit)[[1]]
x <- seq(min(plotdata$`Tiefe [m]`), max(plotdata$`Tiefe [m]`))
y <- a * x + b
plot(
x = plotdata$`N0 [Bq m-3]`,
y = plotdata$`Tiefe [m]`,
xlab = "N0 (Bq m⁻³)",
ylab = "Tiefe (m)",
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
points(
x = y,
y = x,
type = "l",
lwd = 2
)
}
plot_radon_profile(1)
plot_radon_profile <- function(profil) {
plotdata  <- radon_dCdz[[profil]]$data
r_squared <- radon_dCdz[[profil]]$Rsq
fit       <- radon_dCdz[[profil]]$fit
# Calculate values using regression
# y = a*x + b
a <- coefficients(fit)[[2]]
b <- coefficients(fit)[[1]]
x <- seq(min(plotdata$`Tiefe [m]`), max(plotdata$`Tiefe [m]`))
y <- a * x + b
plot(
x = plotdata$`N0 [Bq m-3]`,
y = plotdata$`Tiefe [m]`,
xlab = "N0 (Bq m⁻³)",
ylab = "Tiefe (m)",
ylim = c(max(plotdata$`Tiefe [m]`), 0)
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
plot_radon_profile(1)
plot_radon_profile <- function(profil) {
plotdata  <- radon_dCdz[[profil]]$data
r_squared <- radon_dCdz[[profil]]$Rsq
fit       <- radon_dCdz[[profil]]$fit
# Calculate values using regression
# y = a*x + b
a <- coefficients(fit)[[2]]
b <- coefficients(fit)[[1]]
x <- seq(min(plotdata$`Tiefe [m]`), max(plotdata$`Tiefe [m]`))
y <- a * x + b
plot(
x = plotdata$`N0 [Bq m-3]`,
y = plotdata$`Tiefe [m]`,
xlab = "N0 (Bq m⁻³)",
ylab = "Tiefe (m)",
ylim = c(max(plotdata$`Tiefe [m]`), 0),
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
points(
x = y,
y = x,
type = "l",
lwd = 2
)
}
plot_radon_profile(1)
plotdata  <- radon_dCdz[[profil]]$data
r_squared <- radon_dCdz[[profil]]$Rsq
fit       <- radon_dCdz[[profil]]$fit
plotdata
# Calculate values using regression
# y = a*x + b
a <- coefficients(fit)[[2]]
b <- coefficients(fit)[[1]]
x <- seq(min(plotdata$`Tiefe [m]`), max(plotdata$`Tiefe [m]`))
y <- a * x + b
plot(
x = plotdata$`N0 [Bq m-3]`,
y = plotdata$`Tiefe [m]`,
xlab = "N0 (Bq m⁻³)",
ylab = "Tiefe (m)",
ylim = c(max(plotdata$`Tiefe [m]`), 0),
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
points(
x = y,
y = x,
type = "l",
lwd = 2
)
plot(
x = plotdata$`N0 [Bq m-3]`,
y = plotdata$`Tiefe [m]`,
xlab = "N0 (Bq m⁻³)",
ylab = "Tiefe (m)",
ylim = c(max(plotdata$`Tiefe [m]`), 0),
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
points(
x = y,
y = x,
type = "l",
lwd = 2
)
x
x <- seq(min(plotdata$`Tiefe [m]`), max(plotdata$`Tiefe [m]`), length.out = 100)
y <- a * x + b
x
plot_radon_profile <- function(profil) {
plotdata  <- radon_dCdz[[profil]]$data
r_squared <- radon_dCdz[[profil]]$Rsq
fit       <- radon_dCdz[[profil]]$fit
# Calculate values using regression
# y = a*x + b
a <- coefficients(fit)[[2]]
b <- coefficients(fit)[[1]]
x <- seq(min(plotdata$`Tiefe [m]`), max(plotdata$`Tiefe [m]`), length.out = 100)
y <- a * x + b
plot(
x = plotdata$`N0 [Bq m-3]`,
y = plotdata$`Tiefe [m]`,
xlab = "N0 (Bq m⁻³)",
ylab = "Tiefe (m)",
ylim = c(max(plotdata$`Tiefe [m]`), 0),
main = paste("Profil", profil, "\t R² =", round(r_squared, 2))
)
points(
x = y,
y = x,
type = "l",
lwd = 2
)
}
plot_radon_profile(1)
plot_radon_profile(2)
plot_radon_profile(3)
D_P_radon <- c()
D_P_radon[1] <- radon_flux[[1]]$flux / radon_dCdz[[1]]$dCdz
D_P_radon[2] <- radon_flux[[2]]$flux / radon_dCdz[[2]]$dCdz
D_P_radon[3] <- radon_flux[[3]]$flux / radon_dCdz[[3]]$dCdz
D_P_radon
format(D_P_radon)
format(D_P_radon)
format
?format
format(D_P_radon, scientific = TRUE)
format(D_P_radon, scientific = TRUE, digits = 3)
format(D_P_radon, scientific = TRUE, digits = 2)
format(D_P_radon, scientific = TRUE, digits = 3)
12.2 + 273
D_P_radon[1] <- radon_flux[[1]]$flux / radon_dCdz[[1]]$dCdz
D_P_radon[2] <- radon_flux[[2]]$flux / radon_dCdz[[2]]$dCdz
D_P_radon[3] <- radon_flux[[3]]$flux / radon_dCdz[[3]]$dCdz
D_P_radon
1e-3
68 * 1.2
68 * 1.3
68 * 1.25
72 * 1.25
c(750, 615) * 0.8
c(750, 615) * 0.5
c(750, 615) * 0.4
c(750, 615) * 0.6
setwd("/home/robert/oldHome/robert/Dokumente/Ausbildung/Master/Aktuelles/002_MA/FeTreatmentModel")
